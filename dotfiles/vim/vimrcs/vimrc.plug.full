" ================== Plugin configs ========================

" " -------- TwitVim {{{
" let twitvim_browser_cmd = 'open'
" let twitvim_force_ssl = 1
" let twitvimount = 40
" }}}

" -------- tweetvim {{{
let g:tweetvim_silent_say = 1
let g:tweetvim_display_source = 1
nnoremap tww <esc>:TweetVimCommandSay<CR>
nnoremap twl <esc>:split +TweetVimHomeTimeline<CR>
nnoremap twt <esc>:split +Unite\ tweetvim/account<CR>
" }}}

" -------- qiita.vim {{{
let g:qiita_vim_twitter = v:true
let g:qiita_vim_gist = v:false
let g:qiita_vim_private = v:false
" }}}

" -------- github-completion {{{
augroup config-github-complete
  autocmd!
  autocmd FileType gitcommit setl omnifunc=github_complete#complete
  autocmd FileType markdown setl omnifunc=github_complete#complete
  autocmd FileType conf  setl omnifunc=github_complete#complete
  autocmd FileType gfimarkdown setl omnifunc=github_complete#complete
augroup END
" }}}

" ------- github-issues.vim {{{
let g:github_issues_no_omni = 1 " set anything to disable omnifunc 
if filereadable(expand('~/.vimrc.private')) " source access token
  source ~/.vimrc.private
endif
" }}}

" ------- previm {{{
let g:previm_open_cmd = 'open -a Chrome'
augroup PrevimSettings
  autocmd!
  autocmd BufNewFile,BufRead *.{.md,mdwn,mkd,mkdn,mark*} set filetype=markdown
augroup END
" }}}

" -------- Qfixhowm {{{
let QFixHowm_FileType = 'markdown.vimwiki.qfix_memo'
let howm_dir = '~/howm'
let howm_filename            = '%Y/%m/%Y-%m-%d-%H%M%S.md'
let howm_fileencoding        = 'utf-8'

let HowmAlarmFile = howm_dir . '/howmalarm'
let HowmAlarmUseQFixHowm = 2
" }}}

" ------- vimwiki {{{
au FileType vimwiki set noreadonly
let wiki_default = {'path': '~/vimwiki/wiki_default', 'path_html': '~/vimwiki/html/wiki_default'}
let wiki_note = {'path': '~/vimwiki/notes', 'path_html': '~/vimwiki/html/notes'}
let wiki_projects = {'path': '~/vimwiki/wiki_projects', 'path_html': '~/vimwiki/html/wiki_projects'}
let wiki_tfc = { 'path': '~/Desktop/tfc/wiki', 'path_html': '~/Desktop/tfc/wiki_html/'}
let wiki_codereading = { 'path': '~/vimwiki/wiki_codereading', 'path_html': '~/vimwiki/html/wiki_codereading'}
let wiki_howm = { 'path': howm_dir, 'path_html': howm_dir . '/html', 'syntax': 'markdown'}
let wiki_yozakura_project = { 'path': '~/Desktop/dev/projects/yozakura-project/wiki', 'path_html': '~/Desktop/dev/projects/yozakura-project/wiki_html', 'syntax': 'markdown'}

let g:vimwiki_list = [wiki_default, wiki_note, wiki_projects, wiki_tfc, wiki_codereading, wiki_howm, wiki_yozakura_project]
let g:vimwiki_folding = 'expr'

"" toggle syntax.
"" source: http://tk2000ex.blogspot.com/2013/12/markdownvimwiki.html
function! Vimwiki_syntax_toggle()
  if ( &filetype == 'markdown')
    set filetype=vimwiki
  elseif ( &filetype == 'vimwiki' )
    set filetype=markdown
  endif
endfunction
augroup Vimwiki_CustomCommands
  autocmd!
  autocmd BufNewFile,BufRead *.wiki nmap ,s :call Vimwiki_syntax_toggle()<CR>
augroup END
" }}}

" =================== Reference URLs =========================================
" ==                                                                        ==
" ==     		http://vim-jp.org                                   ==
" ==               VIM Japanese community site                              ==
" ==                                                                        ==
" ==          https://gitter.im/vim-jp/reading-vimrc                        ==
" ==               .vimrc Reading Community chat                            ==
" ==    http://tk2000ex.blogspot.com/2013/12/markdownvimwiki.html           ==
" ==        Vimwiki_syntax_toggle                                           ==
" ============================================================================
