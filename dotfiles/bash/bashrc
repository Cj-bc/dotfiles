cat ~/.bashrc.banner

# ================================= Functions ================================ {{{1

# git_branch() {{{2
# check current git branch
git_branch() {
  echo $(git branch 2>/dev/null | sed -ne "s/^\* \(.*\)$/\1/p")
}

# torf() {{{2
# reset exit status code to previous command
function torf() {
  return $stat
}

# wtdd() {{{2
# let watch todo daemon know where you are now
function wtdd {
  [ -f ~/.wtdd ] && echo $(pwd) >~/.wtdd 2>/dev/null

# forecolor() {{{2
# output all colors for foreground
function forecolor {
  for i in {0..255};do
    if [ $(( i % 10)) -eq 0 ];then
      echo "| $i"
    fi
    tput setaf $i
    echo -n '#'
    tput sgr0
  done
}

# backcolor() {{{2
# output all colors for background
function backcolor {
  for i in {0..255};do
    if [ $(( i % 10)) -eq 0 ];then
      echo "| $i"
    fi
    tput setab $i
    echo -n '#'
    tput sgr0
  done
}

# notes() {{{2
# shell utility for Notes vim command
function notes {
  if [[ $# -eq 0 ]];then
    vim +Notes
  else
    vim +"Notes $1"
  fi
}


export PS1="\`stat=\"\$?\";echo -n '\$?is'\$stat;[ -e ./.git ] && echo -n [\$(git_branch)];[ $VIM ] && echo -n '(vim)';echo '\r';[ \${stat} = 0 ] && echo \[\e[33m\]\<X_X\>\[\e[0m\] || echo \[\e[31m\]\<@_@\>\[\e[0m\];torf;wtdd\`:\W\\$ " # \ before $value is really important!
# ================================= Pronpts ================================== {{{1
export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME:+$FUNCNAME(): }' # setting debug prompt

# ================================= Daemons ================================== {{{1

# for watchtodo
if [ -d ~/.watchtodo ];then
  export PS1="${PS1}\$(echo \"$(tty) : $(pwd) \" >~/.watchtodo/pwd 2>/dev/null)"
fi
# ================================= Alias ==================================== {{{1
if [ "$(uname)" = 'Darwin' ]; then
    export LSCOLORS=xbfxcxdxbxegedabagacad
    alias ls='ls -G'
else
    eval `dircolors ~/.colorrc`
    alias ls='ls --color=auto'
fi
alias la='ls -a'
alias ll='ls -l'
alias tree='tree -C'
alias bashrc='source ~/.bashrc'
alias bash_profile='source ~/.bash_profile'
alias back='cd $OLDPWD'
alias prs='ghi | grep â†‘'
alias init='[ ! -d ".git" ] && { git init; git flow init; hub create; } || echo "aleady initialized"'

# ------------ crons {{{2
alias mkcron='crontab -e'
alias lscron='crontab -l'

# ------------ gits {{{2
alias mkpr='hub pull-request'
alias gs='git status'
alias gd='git diff'
alias gc='git commit'
alias gca='git commit --amend'
alias glo='git log --oneline'

# ------------ apps {{{2
alias siri='open /Applications/Siri.app'
alias drp='cd ~/Dropbox && ls'
alias stopwatch='utimer --stopwatch'
alias dia='[ -d ~/.diary/$(date "+%Y/%m") ] || mkdir ~/.diary/$(date "+%Y/%m");vim ~/.diary/$(date "+%Y/%m/%d").dia'
alias qiita='~/Accounts/Cj/Projects/Tools/ShellScripts/qiita/qiita.sh'
alias td='todo.sh'
alias dotdrop='$HOME/dotfiles/dotdrop.sh'
alias jnethack='cocot -t UTF-8 -p cp932 -- ~/nethackdir/jnethack'
if [ -d '/Applications/Koto-Qt.app' ]; then
  alias koto-cli='/Applications/Koto-Qt.app/Contents/MacOS/koto-cli'
  alias kotod='/Applications/Koto-Qt.app/Contents/MacOS/kotod'
fi

# ------------ networks {{{2
alias airport='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport'
alias wport='networksetup -setairportpower' # usage: wport <device> <on/off>
alias wifi='networksetup -setairportnetwork' # usage: wifi <device> <SSID> <password>
alias google='[ $# -ne 0 ] && w3m https://www.google.com/search?q=${@// /+}  || w3m google.com' #usage: google [word]
alias ymserver='~/Accounts/Cj/Projects/Tools/ShellScripts/ymserver/ymserver.sh'


shopt -s xpg_echo

export PATH=$PATH:~/.nodebrew/current/bin


#=================== setting for ssh-agent {{{1
# this will prevent us from losing ssh-agent on tmux when we re-connect ssh
agent="$HOME/.ssh/agent"
if [ -S "$SSH_AUTH_SOCK" ]; then
      case $SSH_AUTH_SOCK in
        /tmp/*/agent.[0-9]*)
              ln -snf "$SSH_AUTH_SOCK" $agent && export SSH_AUTH_SOCK=$agent
      esac
elif [ -S $agent ]; then
  export SSH_AUTH_SOCK=$agent
else
  echo "no ssh-agent"
fi

# ================== setting for todo-txt {{{1
if [ -f /usr/local/etc/bash_completion.d/todo_completion ];then
  source /usr/local/etc/bash_completion.d/todo_completion
  complete -F _todo td # set todo.sh completion for td alias
fi


# ================== setting for linuxbrew {{{1

if [ -d ~/.linuxbrew ];then
  PATH="$HOME/.linuxbrew/bin:$PATH"
  export MANPATH="$(brew --prefix)/share/man:$MANPATH"
  export INFOPATH="$(brew --prefix)/share/info:$INFOPATH"
fi


export PYENV_ROOT=$HOME/.pyenv
export PATH=$PYENV_ROOT/bin:$PATH
eval "$(pyenv init -)"


# ------------ go {{{2
export GOPATH=$HOME/.go
export PATH="${PATH}:${GOPATH}/bin"

# ------------ fzf {{{2
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# =========================== Reference ========================================= {{{1
# ==                                                                           == 
# ==  https://qiita.com/kawaz/items/65cdbeaa739c4e6b7776                       ==
# ==      -> setting of PS4                                                    ==
# == http://note.kurodigi.com/bashprompt-customize/                            ==
# ==      -> color of PS1(echo command)                                        ==
# == https://news.mynavi.jp/article/20090909-bash/                             ==
# ==      -> change PS1 when $? -ne 0                                          ==
# == https://qiita.com/iwazer/items/5f57a80b8aac0f4e9839                       ==
# ==      -> add git-branch in PS1                                             ==
# == https://qiita.com/sonots/items/2d7950a68da0a02ba7e4                       ==
# ==      -> setting of ssh-agent                                              ==
# ===============================================================================
